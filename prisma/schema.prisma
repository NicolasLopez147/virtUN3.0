generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  description String
  imageUrl    String
  name        String
  price       Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  //we can fetch all cart items that contain a product, through the product model:
  CartItem    CartItem[]

  @@map("products")
}

model Cart {
  //automatically create an id of type mongoDB ObjectId
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  //this allows us to fetch all cart items that belong to a cart:
  items  CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  //the name of the colection in the database:
  @@map("carts")
}

model CartItem {
  //id is autogenerated, while productId is a reference to the Product model
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  productId String  @db.ObjectId
  //we use relations: id is the id of the Product model
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade ) //onDelete: Cascade means that if we delete a product, all cart items that contain that product will also be deleted
  quantity  Int
  cartId    String  @db.ObjectId
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  @@map("cartItems")
}
